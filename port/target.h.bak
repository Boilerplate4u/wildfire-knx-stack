//
//
//  todo:   Diese Datei (natürlich) für jedes Target getrennt anlegen!!! 
//          Vorallem gehören hier die Datentyp-Definitionen hin!!!
//

#ifndef __TARGET_H
#define __TARGET_H

#ifndef FALSE
#define FALSE   ((BOOL)0)
#endif  // FALSE

#ifndef TRUE
#define TRUE    ((BOOL)1)
#endif  // TRUE

#ifndef NULL
#define NULL    0
#endif  // NULL

// CriticalSection cs;
//  InitializeCriticalSection(&cs); // Muss irgendwo hin!!!

#define _DINT()   // EnterCriticalSection(&cs);
#define _EINT()   // LeaveCriticalSection(&cs);

//#define _EINT()   asm("cli");
//#define _DINT()   asm("sti");

typedef unsigned char BYTE,*PBYTE;
typedef unsigned short WORD,*PWORD;
typedef unsigned long   DWORD,*PDWORD;


typedef signed char SBYTE,*PSBYTE;
typedef signed short SWORD,*PSWORD;
typedef signed long     SDWORD,*PSDWORD;

typedef BYTE BOOL,*PBOOL;

typedef void *ADDR_T;

#define UNREFERENCED_PARAMETER(p)   (p)=(p)

#define MIN(a,b)        ((a)>(b)) ? (b) : (a)
#define MAX(a,b)        ((a)>(b)) ? (a) : (b)

#define LOBYTE(w)       (BYTE)((WORD)((w) & 0x00ff))
#define HIBYTE(w)       (BYTE)((WORD)(((w)>>8) & 0x00ff))

/*

// Hinweis: Variante: _ASSERT()-Makros auch im laufenden Betrieb (Reset, Critical-Error-Hook).

    BOOL STK_CriticalErrorHandler(BYTE severity,BYTE cause);  // User-supplied-Handler,
            RESET if returns TRUE (in Abhängigkeit von 'severity').

#define _ASSERT(cond)   \
#ifdef  DEBUG           \


#endif  \\ DEBUG

#define _DBG_PRINT(msg)    \
#ifdef  DEBUG              \


#endif  \\ DEBUG
*/
#define BIT0    0x01
#define BIT1    0x02
#define BIT2    0x04
#define BIT3    0x08
#define BIT4    0x10
#define BIT5    0x20
#define BIT6    0x40
#define BIT7    0x80
#define BIT8    0x0100
#define BIT9    0x0200
#define BIT10   0x0400
#define BIT11   0x0800
#define BIT12   0x1000
#define BIT13   0x2000
#define BIT14   0x4000
#define BIT15   0x8000

#define _GETBIT(port,bit)     (((port) & (bit))==(bit)) ? (TRUE) : (FALSE)
#define _SETBIT(port,bit)     (port) |= (bit)
#define _CLRBIT(port,bit)     (port) &= (~(bit))

#endif  // __TARGET_H

